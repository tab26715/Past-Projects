package cs1302.arcade;

import java.util.Random;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyCodeCombination;
import javafx.scene.input.KeyCombination;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.scene.layout.BorderPane;
import javafx.geometry.Pos;
import javafx.geometry.Insets;
import javafx.scene.layout.VBox;
import javafx.scene.layout.HBox;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundImage;
import javafx.scene.layout.BackgroundRepeat;
import javafx.scene.layout.BackgroundPosition;
import javafx.scene.layout.BackgroundSize;
import javafx.scene.control.Button;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.Menu;
import javafx.stage.Modality;
import javafx.scene.text.Text;

/**
 * The GUI enterance point for the arcade
 *
 *@author Ty Burns tab26715@uga.edu Josh Belienburg
 */

public class ArcadeApp extends Application {

    Group group;
    BorderPane startUp;
    HBox center;
    Button mineSweeperStart;
    Button spaceInvadersStart;
    HBox back;
    MenuBar menuBar;
    MenuItem exitItem;
    // BackgroundImage background;

    @Override
    public void start(Stage stage) {

	/* You are allowed to rewrite this start method, add other methods, 
	 * files, classes, etc., as needed. This currently contains some 
	 * simple sample code for mouse and keyboard interactions with a node
	 * (rectangle) in a group. 
	 */
    
	group = new Group();// main container
    startUp = new BorderPane();
    startUp.setPrefSize(640,480);
    startUp.setStyle("-fx-background-color: rgba(0, 100, 100, 0)"); //sets the borderPane's background to transparent
    center = new HBox(50);
    center.setAlignment(Pos.CENTER);
    back = new HBox();
    back.setAlignment(Pos.CENTER);
    menuBar = new MenuBar();
    exitItem = new MenuItem("Exit");

    ImageView background = new ImageView("background.jpg");
    background.setFitWidth(640);
    background.setFitHeight(480);
    back.getChildren().add(background);
    group.getChildren().add(back);
    
    Menu file = new Menu("File");
        exitItem.setAccelerator(new KeyCodeCombination(KeyCode.X, KeyCombination.SHORTCUT_DOWN));
    	  exitItem.setOnAction(event -> {
    		Platform.exit();
    		System.exit(0);
	    });
	  file.getItems().add(exitItem);
    Menu help = new Menu("Help");
    Menu options = new Menu("Options");
    menuBar.getMenus().addAll(file, help, options);

    mineSweeperStart = new Button();
    ImageView mineSweeperIcon = new ImageView("minesweeper-intro.png");
    mineSweeperIcon.setFitWidth(150);
    mineSweeperIcon.setFitHeight(150);
    mineSweeperStart.setGraphic(mineSweeperIcon);
    mineSweeperStart.setAlignment(Pos.CENTER);
    spaceInvadersStart = new Button();
    ImageView spaceInvadersIcon = new ImageView("spaceinvaders-intro.jpg");
    spaceInvadersIcon.setFitWidth(150);
    spaceInvadersIcon.setFitHeight(150);
    spaceInvadersStart.setGraphic(spaceInvadersIcon);
    spaceInvadersStart.setAlignment(Pos.CENTER);
    

    mineSweeperStart.setOnAction(e -> {
        Stage popup = new Stage();
        popup.initModality(Modality.APPLICATION_MODAL);
        Button easy = new Button("Easy");
        Button normal = new Button("Normal");
        Button impossible = new Button("Impossible");
        easy.setOnAction(l -> {
            MineSweeperBoard game = new MineSweeperBoard('e');
            popup.setTitle("MineSweeper - Easy");
            Scene g = new Scene(game);
            popup.setScene(g);
            popup.sizeToScene();
            popup.show();
        });
        normal.setOnAction(l -> {
            MineSweeperBoard game = new MineSweeperBoard('n');
            popup.setTitle("MineSweeper - Normal");
            Scene g = new Scene(game);
            popup.setScene(g);
            popup.sizeToScene();
            popup.show();

        });
        impossible.setOnAction(l -> {
            MineSweeperBoard game = new MineSweeperBoard('i');
            popup.setTitle("MineSweeper - Impossible");
            Scene g = new Scene(game);
            popup.setScene(g);
            popup.sizeToScene();
            popup.show();

        });
        easy.setMaxWidth(Double.MAX_VALUE);
        normal.setMaxWidth(Double.MAX_VALUE);
        impossible.setMaxWidth(Double.MAX_VALUE);
        VBox mineSweeperOptions = new VBox(new Text("Pick a difficulty!"),easy,normal,impossible); 
        mineSweeperOptions.setFillWidth(true);
        Scene s = new Scene(mineSweeperOptions);
        popup.setResizable(false);
        popup.setScene(s);
        popup.sizeToScene();
        popup.show();
    });

    spaceInvadersStart.setOnAction(e -> {
       Stage popup = new Stage();
       popup.initModality(Modality.APPLICATION_MODAL);
       SpaceInvadersDisplay game = new SpaceInvadersDisplay();
       Scene s = new Scene(game,1000,720);
       popup.setScene(s);
       popup.sizeToScene();
       popup.show();
       game.getShip().requestFocus();
    });
	
    center.getChildren().addAll(mineSweeperStart, spaceInvadersStart);
    center.setAlignment(Pos.CENTER);
    startUp.setAlignment(center, Pos.CENTER);
    startUp.setCenter(center);
    startUp.setTop(menuBar);

    group.getChildren().add(startUp);
    Scene scene = new Scene(group, 640, 480);
	
    stage.setTitle("arcade!");
    stage.setScene(scene);
	stage.sizeToScene();
    stage.show();

	// the group must request input focus to receive key events
	// @see https://docs.oracle.com/javase/8/javafx/api/javafx/scene/Node.html#requestFocus--
	group.requestFocus();

    } // start

    public static void main(String[] args) {
	try {
	    Application.launch(args);
	} catch (UnsupportedOperationException e) {
	    System.out.println(e);
	    System.err.println("If this is a DISPLAY problem, then your X server connection");
	    System.err.println("has likely timed out. This can generally be fixed by logging");
	    System.err.println("out and logging back in.");
	    System.exit(1);
	} // try
    } // main

} // ArcadeApp

